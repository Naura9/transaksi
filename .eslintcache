[{"D:\\semester2\\react1\\src\\index.js":"1","D:\\semester2\\react1\\src\\reportWebVitals.js":"2","D:\\semester2\\react1\\src\\App.js":"3","D:\\semester2\\react1\\src\\pages\\pages.js":"4","D:\\semester2\\react1\\src\\pages\\pegawai.js":"5","D:\\semester2\\react1\\src\\pages\\home.js":"6","D:\\semester2\\react1\\src\\pages\\login.js":"7","D:\\semester2\\react1\\src\\components\\navbar.js":"8","D:\\semester2\\react1\\src\\pages\\register.js":"9","D:\\semester2\\react1\\src\\pages\\siswa.js":"10","D:\\semester2\\react1\\src\\pages\\pelanggaran.js":"11","D:\\semester2\\react1\\src\\pages\\pelanggaran_siswa.js":"12"},{"size":547,"mtime":1611198767177,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":265,"mtime":1613006232564,"results":"16","hashOfConfig":"14"},{"size":855,"mtime":1616675623550,"results":"17","hashOfConfig":"14"},{"size":7615,"mtime":1613028690117,"results":"18","hashOfConfig":"14"},{"size":5943,"mtime":1617069727420,"results":"19","hashOfConfig":"14"},{"size":3059,"mtime":1615170994870,"results":"20","hashOfConfig":"14"},{"size":1233,"mtime":1617069320721,"results":"21","hashOfConfig":"14"},{"size":3291,"mtime":1614842899399,"results":"22","hashOfConfig":"14"},{"size":9106,"mtime":1615171965649,"results":"23","hashOfConfig":"14"},{"size":7753,"mtime":1614080167929,"results":"24","hashOfConfig":"14"},{"size":17535,"mtime":1617069698076,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1v524jy",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\semester2\\react1\\src\\index.js",[],["52","53"],"D:\\semester2\\react1\\src\\reportWebVitals.js",[],"D:\\semester2\\react1\\src\\App.js",[],"D:\\semester2\\react1\\src\\pages\\pages.js",[],"D:\\semester2\\react1\\src\\pages\\pegawai.js",[],"D:\\semester2\\react1\\src\\pages\\home.js",[],"D:\\semester2\\react1\\src\\pages\\login.js",[],"D:\\semester2\\react1\\src\\components\\navbar.js",[],"D:\\semester2\\react1\\src\\pages\\register.js",[],"D:\\semester2\\react1\\src\\pages\\siswa.js",["54"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport NavBar from '../components/navbar'\r\nimport {Button,Modal, Table, Card, Form} from 'react-bootstrap' \r\n\r\nclass Siswa extends React.Component {\r\n    constructor() {  \r\n        super();  \r\n        this.state = {  \r\n            token:\"\",\r\n            siswa: [],\r\n            jurusan2:[],\r\n            id_siswa:\"\",\r\n            nis:\"\",\r\n            nama_siswa:\"\",\r\n            kelas:\"\",\r\n            jurusan:\"\",\r\n            poin:\"\",\r\n            search:\"\",\r\n            action:\"\",\r\n          isModalOpen: false\r\n        }\r\n        if (localStorage.getItem(\"token\")) {\r\n          this.state.token = localStorage.getItem(\"token\")\r\n      } else {\r\n          window.location = \"/login\"\r\n      }\r\n\r\n      this.headerConfig.bind(this)\r\n}\r\nheaderConfig = () => {\r\n  let header = {\r\n      headers: { Authorization: `Bearer ${this.state.token}` }\r\n  }\r\n  return header\r\n}\r\n\r\n    bind = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n    handleAdd = () => {\r\n        this.setState({\r\n          id_siswa:\"\",\r\n          nis:\"\",\r\n          nama_siswa:\"\",\r\n          kelas:\"\",\r\n          jurusan:\"\",\r\n          poin:\"\",\r\n          search:\"\",\r\n          action:\"\",\r\n          action: \"insert\",\r\n          isModalOpen: true\r\n        })\r\n    }\r\n\r\n    handleEdit = (item) => {\r\n        this.setState({\r\n          id_siswa: item.id_siswa,\r\n          nis: item.nis,\r\n          nama_siswa: item.nama_siswa,\r\n          kelas: item.kelas,\r\n          jurusan: item.jurusan,\r\n          poin: item.poin,\r\n          action: \"update\",\r\n          isModalOpen: true\r\n        })\r\n    }\r\n    handleClose = () => {\r\n        this.setState({\r\n            isModalOpen: false\r\n        })\r\n    }\r\n    handleSave = (event) => {\r\n        event.preventDefault();\r\n        /* menampung data nid, nama dan alamat dari Form\r\n        ke dalam FormData() untuk dikirim  */\r\n        let url = \"\";\r\n        if (this.state.action === \"insert\") {\r\n          url = \"http://localhost:2000/siswa/save\"\r\n        } else {\r\n          url = \"http://localhost:2000/siswa/update\"\r\n        }\r\n        let form = {\r\n            id_siswa: this.state.id_siswa,\r\n            nis: this.state.nis,\r\n            nama_siswa: this.state.nama_siswa,\r\n            kelas: this.state.kelas,\r\n            jurusan: this.state.jurusan,\r\n            poin: this.state.poin\r\n          }\r\n          // mengirim data ke API untuk disimpan pada database\r\n          axios.post(url, form, this.headerConfig())\r\n          .then(response => {\r\n          // jika proses simpan berhasil, memanggil data yang terbaru\r\n          this.getSiswa();\r\n          })\r\n          this.setState({\r\n            isModalOpen: false\r\n        })\r\n        }\r\n    getSiswa = () => {\r\n        let url = \"http://localhost:2000/siswa\";\r\n        // mengakses api untuk mengambil data siswa\r\n        axios.get(url, this.headerConfig())\r\n        .then(response => {\r\n          // mengisikan data dari respon API ke array siswa\r\n          this.setState({siswa: response.data.siswa});\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n\r\n    getJurusan = () => {\r\n      let url = \"http://localhost:2000/siswa/jurusan\";\r\n      axios.get(url, this.headerConfig())\r\n      .then(response => {\r\n        this.setState({jurusan2: response.data.jurusan});\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n    componentDidMount(){\r\n        this.getSiswa()\r\n        this.getJurusan()\r\n    }\r\n    findSiswa = (event) => {\r\n        let url = \"http://localhost:2000/siswa\";\r\n        if (event.keyCode === 13) {\r\n        //   menampung data keyword pencarian\r\n          let form = {\r\n            find: this.state.search\r\n          }\r\n          // mengakses api untuk mengambil data siswa\r\n          // berdasarkan keyword\r\n          axios.post(url, form, this.headerConfig())\r\n          .then(response => {\r\n            // mengisikan data dari respon API ke array siswa\r\n            this.setState({siswa: response.data.siswa});\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n          });\r\n        }\r\n    }\r\n    Drop = (id_siswa) => {\r\n        let url = \"http://localhost:2000/siswa/\" + id_siswa;\r\n        // memanggil url API untuk menghapus data pada database\r\n        if (window.confirm('Apakah Anda yakin ingin menghapus data ini?')) {\r\n          axios.delete(url, this.headerConfig())\r\n          .then(response => {\r\n            // jika proses hapus data berhasil, memanggil data yang terbaru\r\n            this.getSiswa();\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n          });\r\n        }\r\n    }\r\n    render(){\r\n        console.log(this.state.siswa)\r\n        return(\r\n            <>\r\n            <NavBar />\r\n            <Card>\r\n                <Card.Header className=\"card-header bg-warning text-white\" align={'center'}>Data Siswa </Card.Header>\r\n                <Card.Body>\r\n                <input type=\"text\" className=\"form-control mb-2\" name=\"search\" value={this.state.search} onChange={this.bind} onKeyUp={this.findSiswa} placeholder=\"Pencarian...\" />\r\n                <Button variant=\"success\" onClick={this.handleAdd}>\r\n                    Tambah Data\r\n                </Button>\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>  \r\n                            <th>NIS</th>\r\n                            <th>Nama Siswa</th> \r\n                            <th>Kelas</th>\r\n                            <th>Jurusan</th>\r\n                            <th>Poin</th>\r\n                            <th>Option</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.state.siswa.map((item,index) => {  \r\n                        return (  \r\n                        <tr key={index}>  \r\n                            <td>{item.id_siswa}</td>  \r\n                            <td>{item.nis}</td>\r\n                            <td>{item.nama_siswa}</td>  \r\n                            <td>{item.kelas}</td> \r\n                            <td>{item.nama_jurusan}</td>\r\n                            <td>{item.poin}</td> \r\n                            <td>  \r\n                            <Button className=\"btn btn-sm btn-info m-1\" data-toggle=\"modal\"  \r\n                            data-target=\"#modal\" onClick={() => this.handleEdit(item)}>  \r\n                                Edit  \r\n                            </Button>  \r\n                            <Button className=\"btn btn-sm btn-danger m-1\" onClick={() => this.Drop(item.id_siswa)}>  \r\n                                Hapus  \r\n                            </Button>  \r\n                            </td>  \r\n                        </tr>  \r\n                        );  \r\n                    })}\r\n                    </tbody>\r\n                    </Table>\r\n                </Card.Body>\r\n                </Card>\r\n\r\n                <Modal show={this.state.isModalOpen} onHide={this.handleClose}>\r\n                    <Modal.Header closeButton>\r\n                    <Modal.Title>Form Siswa</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Form onSubmit={this.handleSave}>\r\n                    <Modal.Body>\r\n                        ID  \r\n                        <input type=\"number\" name=\"id_siswa\" value={this.state.id_siswa} onChange={this.bind}  \r\n                        className=\"form-control\" required />  \r\n                        NIS  \r\n                        <input type=\"number\" name=\"nis\" value={this.state.nis} onChange={this.bind}  \r\n                        className=\"form-control\" required />  \r\n                        Nama Siswa  \r\n                        <input type=\"text\" name=\"nama_siswa\" value={this.state.nama_siswa} onChange={this.bind}  \r\n                        className=\"form-control\" required />  \r\n                        Kelas\r\n                        <input type=\"text\" name=\"kelas\" value={this.state.kelas} onChange={this.bind}  \r\n                        className=\"form-control\" required />  \r\n                        Jurusan\r\n                        <select name=\"jurusan\" value={this.state.jurusan} onChange={this.bind} className=\"form-control\" required>\r\n                            {this.state.jurusan2.map((item)=> {  \r\n                            return ( <option value={item.id_jurusan}>{item.nama_jurusan}</option> )})}\r\n                        </select>                        \r\n                        Poin\r\n                        <input type=\"number\" name=\"poin\" value={this.state.poin} onChange={this.bind}  \r\n                        className=\"form-control\" required />  \r\n                    </Modal.Body>\r\n                     <Modal.Footer>\r\n                     <button className=\"btn btn-sm\" type=\"submit\">  \r\n                     Simpan \r\n                     </button>\r\n                    </Modal.Footer>\r\n                    </Form>\r\n                </Modal>\r\n            </>\r\n    );  \r\n  }\r\n}\r\n\r\nexport default Siswa","D:\\semester2\\react1\\src\\pages\\pelanggaran.js",[],"D:\\semester2\\react1\\src\\pages\\pelanggaran_siswa.js",["55","56"],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":51,"column":11,"nodeType":"63","messageId":"64","endLine":51,"endColumn":17},{"ruleId":"65","severity":1,"message":"66","line":173,"column":78,"nodeType":"67","messageId":"64","endLine":173,"endColumn":80},{"ruleId":"68","severity":1,"message":"69","line":375,"column":42,"nodeType":"70","endLine":375,"endColumn":106},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-dupe-keys","Duplicate key 'action'.","ObjectExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]